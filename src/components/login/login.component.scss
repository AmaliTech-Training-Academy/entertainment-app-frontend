@use "../../styles/variables" as *;
@use "../../styles/spacing" as *;
@use "../../styles/typography" as *;
@use "../../styles/effects" as *;
@use "../../styles/radius" as *;
@use "../../styles/stroke" as *;
@use "sass:map";

.login-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  padding: map.get($spacing, 6);
  background-color: map.get($primary-colors, 1000);
}

.logo-container {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: map.get($spacing, 8);

  img {
    width: 100%;
    max-width: 100%;

    @media screen and (max-width: 768px) {
      max-width: 80%;
    }

    @media screen and (max-width: 480px) {
      max-width: 60%;
    }
  }
}

.login-card {
  background-color: map.get($primary-colors, 900);
  border-radius: map.get($radius, 6);
  width: 100%;
  max-width: 448px;
  padding: map.get($spacing, 8);
}

.login-title {
  color: map.get($neutral-colors, 100);
  font-size: map.get(map.get($headings, h4), font-size);
  font-weight: $font-weight-regular;
  margin-bottom: map.get($spacing, 8);
  user-select: none;
}

.full-width {
  width: 100%;
  margin-bottom: map.get($spacing, 6);
}

/* Button styles with hover effect */
.login-button {
  width: 100%;
  padding: map.get($spacing, 3) 0;
  border-radius: map.get($radius, 3);
  font-size: map.get(map.get($body, b1), font-size);
  font-weight: $font-weight-regular;
  margin-bottom: map.get($spacing, 8);
  border: none;
  cursor: pointer;
  transition: background-color 0.2s ease;

  /* Normal state */
  &.mat-mdc-raised-button:not(:disabled) {
    background-color: map.get($red-colors, 100);
    color: map.get($neutral-colors, 100);
  }

  /* hover state */
  &.mat-mdc-raised-button:not(:disabled):hover {
    background-color: map.get($neutral-colors, 100);
    color: map.get($red-colors, 100);
  }

  /* Disabled state */
  &.mat-mdc-raised-button:disabled {
    background-color: map.get($neutral-colors, 600);
    color: map.get($neutral-colors, 400);
    cursor: not-allowed;
  }
}

.signup-text {
  color: map.get($neutral-colors, 100);
  font-size: map.get(map.get($body, b1), font-size);
  text-align: center;
  user-select: none;
  width: 100%;
}

.signup-link {
  color: map.get($red-colors, 100);
  text-decoration: underline;
  margin-left: map.get($spacing, 1);
  transition: color 0.2s ease;
}

/* Angular Material overrides */
::ng-deep {
  /* Form field styles */
  .mat-mdc-text-field-wrapper {
    background-color: transparent !important;
    color: map.get($neutral-colors, 400) !important;
  }

  .mat-mdc-form-field.mat-form-field-invalid {
    .mdc-text-field--outlined {
      .mdc-notched-outline__leading,
      .mdc-notched-outline__notch,
      .mdc-notched-outline__trailing {
        border-color: map.get($red-colors, 100) !important;
      }

      /* Focused state keeps red border */
      &.mdc-text-field--focused {
        .mdc-notched-outline__leading,
        .mdc-notched-outline__notch,
        .mdc-notched-outline__trailing {
          border-color: map.get($red-colors, 100) !important;
        }
      }

      /* Keep original label color */
      .mdc-floating-label {
        color: map.get($neutral-colors, 400) !important;
      }
    }
  }

  .mat-mdc-form-field-error-wrapper {
    padding: 0 !important;
    position: absolute !important;
    right: 0 !important;
    top: -200% !important;
    width: auto !important;
  }

  .mat-mdc-form-field-error {
    color: map.get($red-colors, 100) !important;
    font-size: map.get(map.get($body, b2), font-size) !important;
    white-space: nowrap !important;
    text-align: right !important;
    padding-right: map.get($spacing, 2) !important;
  }

  .mat-mdc-form-field-subscript-wrapper {
    height: 20px !important;
    position: relative !important;
    overflow: visible !important;
  }

  .mat-mdc-form-field-required-marker {
    display: none !important;
  }

  /* Button label color */
  .login-button .mdc-button__label {
    color: inherit !important;
  }
}
