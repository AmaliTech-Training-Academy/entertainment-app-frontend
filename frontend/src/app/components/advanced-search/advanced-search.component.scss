@use "../../../styles/variables" as *;
@use "../../../styles/mixins" as *;
@use "../../../styles/effects" as *;
@use "../../../styles/radius" as *;
@use "../../../styles/spacing" as *;
@use "../../../styles/typography" as *;
@use "../../../styles/stroke" as *;
@use "sass:map";

.container {
  display: flex;
  justify-content: space-between;
  width: 100%;
  max-width: 600px;
  margin: 0 auto;
  flex-wrap: nowrap;
  align-items: baseline;
  gap: map.get($spacing, 3);

  .search-field {
    flex-grow: 1;
    height: 0.4em;

    .search-input {
      padding-top: map.get($spacing, 2);
      padding-bottom: map.get($spacing, 2);
      border-radius: map.get($radius, 2);
      background-color: map.get($primary-colors, 800);
      height: 3rem;
      @include typography(body, b1);
      color: map.get($neutral-colors, 100);
      padding: map.get($spacing, 2);
      border: none;
      width: 100%;
      &::placeholder {
        color: map.get($neutral-colors, 700);
      }
    }
  }

  .search-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 8px; // Space between text and icon
    min-width: 120px;
    height: 48px;
    padding: 0 16px;
    border-radius: 4px;
    background-color: #f44343; // Your red color
    color: white;
    font-size: 16px;
    font-weight: normal; // Not bold
    border: none;
    cursor: pointer;
    box-sizing: border-box;
    position: relative;
    overflow: hidden; // Keeps content contained
    transition: all 0.2s ease;

    &:hover {
      background-color: #e03e3e; // Darker red on hover
    }

    div {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    img {
      width: 20px;
      height: 20px;
      object-fit: contain;
      flex-shrink: 0; // Prevents icon from shrinking
    }

    @media (max-width: 640px) {
      padding: 0 12px;
      min-width: 100px;
      gap: 6px;

      img {
        width: 18px;
        height: 18px;
      }
    }

    @media (max-width: 440px) {
      height: 40px;
      font-size: 14px;

      img {
        width: 16px;
        height: 16px;
      }
    }
  }
}

.search-container {
  max-width: 45rem;
  width: 100%;
  margin: 0 auto;
  padding: 0 map.get($spacing, 4);

  .container {
    margin-bottom: map.get($spacing, 3);
  }
}

.filters-container {
  width: 100%;
  margin: 0 auto;
  padding: 0 map.get($spacing, 4);

  .container {
    display: flex;
    flex-wrap: nowrap;
    align-items: center;

    .filter-group {
      display: flex;
      flex-direction: column;

      .filter-label {
        font-weight: 400;
        @include typography(body, b2);
        color: map.get($neutral-colors, 400);
        margin-bottom: map.get($spacing, 3);
      }

      .filter-button {
        display: flex;
        align-items: center;
        padding: map.get($spacing, 2);
        justify-content: space-between;
        gap: map.get($spacing, 1);
        max-width: 100%;
        width: 70px;
        background-color: map.get($primary-colors, 800);
        color: map.get($neutral-colors, 100);
        border-radius: map.get($radius, 2);
        @include typography(body, b1);
        white-space: nowrap;

        span {
          order: 1;
        }

        mat-icon {
          order: 2;
          transition: transform 0.2s ease;
        }

        &[aria-expanded="true"] mat-icon {
          transform: rotate(180deg);
        }

        @media screen and (max-width: 464px) {
          width: 3rem;
          @include typography(body, b2);
        }

        @media screen and (max-width: 432px) {
          width: 2.6rem;
          @include typography(body, b3);
        }

        @media screen and (max-width: 420px) {
          width: 2rem;
          // @include typography(body, b4);
        }

        @media screen and (max-width: 390px) {
          width: 1.8rem;
          // @include typography(body, b5);
        }
      }
    }
  }
}

/* Dropdown menu styles (same for all screens) */
::ng-deep .mat-mdc-menu-panel {
  background-color: map.get($primary-colors, 800) !important;
  max-height: 300px;
  overflow-y: auto;

  .mat-mdc-menu-item {
    color: map.get($neutral-colors, 100);

    &:hover {
      background-color: map.get($primary-colors, 700) !important;
    }
  }
}
